cache:
  env: "dev"
  enabled: true

  logs:
    level: "info" # Any zerolog.Level.
    stats: true   # Should the statistic like num evictions, refreshes, rps, memory usage and so on be written in /std/out?

  lifetime:
    max_req_dur: "100ms"                # If a request lifetime is longer than 100ms then request will be canceled by context.
    escape_max_req_dur: "X-Google-Bot"  # If the header exists the timeout above will be skipped.

  upstream:
    url: "https://google.com" # downstream reverse proxy host:port
    rate: 160                                   # Rate limiting reqs to backend per second.
    timeout: "10s"                              # Timeout for requests to backend.

  preallocate:
    num_shards: 2048  # Fixed constant (see `NumOfShards` in code). Controls the number of sharded maps.
    per_shard: 1024   # Preallocated map size per shard. Without resizing, this supports 2048*8196=~16785408 keys in total.
    # Note: this is an upper-bound estimate and may vary depending on hash distribution quality.

  eviction:
    threshold: 0.9    # Trigger eviction when cache memory usage exceeds 90% of its configured limit.

  storage:
    size: 32212254720 # 32GB of maximum allowed memory for the in-memory cache (in bytes).

  refresh:
    ttl: "1h"
    error_ttl: "15m"
    rate: 1000        # Rate limiting reqs to backend per second.
    scan_rate: 10000  # Rate limiting of num scans items per second.
    beta: 0.4         # Controls randomness in refresh timing to avoid thundering herd (from 0 to 1).

  persistence:
    dump:
      enabled: true
      format: "gzip"              # gzip or raw json
      dump_dir: "public/dump"     # dump dir.
      dump_name: "cache.dump.gz"  # dump name
      rotate_policy: "ring"       # fixed, ring
      max_files: 7

  rules:
    - path: "/api/v2/pagedata"
      ttl: "20m"
      error_ttl: "5m"
      beta: 0.3 # Controls randomness in refresh timing to avoid thundering herd.
      cache_key:
        query: ['project[id]', 'domain', 'language', 'choice'] # Match query parameters by prefix.
        headers:
          - Accept-Encoding     # Обязательно! gzip / br / deflate.
          - Accept-Language     # Если у тебя мультиязычный контент.
      cache_value:
        headers:
          - Content-Type        # Тип ответа. Например: application/json.
          - Content-Encoding    # Указывает, что тело сжатое (gzip, br).
          - Cache-Control       # Если отдаёшь клиенту max-age, public/private.
          - Vary                # Если ты варьируешь по Accept-Encoding или Accept-Language.

    - path: "/api/v1/pagecontent"
      ttl: "36h"
      error_ttl: "3h"
      beta: 0.3 # Controls randomness in refresh timing to avoid thundering herd.
      cache_key:
        query: ['project[id]', 'domain', 'language', 'choice'] # Match query parameters by prefix.
        headers: ['Accept-Encoding', 'X-Project-ID']           # Match headers by exact value.
      cache_value:
        headers: ['X-Project-ID']                              # Store only when headers match exactly.
